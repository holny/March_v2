server:
  port: 8081
#  context-path: /crud
  tomcat:
    uri-encoding: UTF-8
  servlet:
    encoding:
      enabled: true
      charset: UTF-8
spring:
  profiles:
    active: dev
  thymeleaf:
    enabled: true
    #视图解析器的前缀放在这个文件夹
    prefix: classpath:/templates/
    #后缀
    suffix: .html
    #模式
    mode: HTML
    content-type: text/html
    encoding: UTF-8
    # 开发时关闭缓存,不然没法看到实时页面
    cache: false
    #thymeleaf end

  datasource:
    # 导入Druid jar后直接这里设置数据源type为druid就行(注意底层实现还是JDBC)
    type: com.alibaba.druid.pool.DruidDataSource
    #fiters一定要放在datasource下，如果放到druid下，SQL监控不生效
    #druid相关配置
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      # 基本属性
      url: jdbc:mysql://localhost:3306/blog_v1?characterEncoding=utf-8&allowMultiQueries=true
      username: root
      password:
      #   配置监控统计拦截的filters，去掉后监控界面sql无法统计,log4j:日志记录，'wall'用于防火墙,防御sql注入
      # 如果报错ClassNotFoundException: org.apache.log4j.Priority, 则导入Log4j依赖即可，
      # 监控统计拦截的filters
      filters: stat,wall,log4j2
      # 连接池的配置信息:配置初始化大小/最小/最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 获取连接等待超时时间
      max-wait: 60000
      # 间隔多久进行一次检测，检测需要关闭的空闲连接,单位是毫秒,既作为检测的间隔时间又作为testWhileIdel执行的依据
      time-between-eviction-runs-millis: 60000
      #一个连接在池中最小生存的时间,单位是毫秒,销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
      min-evictable-idle-time-millis: 300000
      # 验证库是否正常sql
      # mysql中为 select 'x'
      # oracle中为 select 1 from dual
      validation-query: SELECT 'x'
      # 空闲时验证，防止连接断开,申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      pool-prepared-statements: false
      # 当值大于0时poolPreparedStatements会自动修改为true
      max-pool-prepared-statement-per-connection-size: 20
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 100MB
  task:
    scheduling:
      pool:
        size: 3
  mvc:
    hiddenmethod:
      filter:
        # 浏览器form表单只支持GET与POST请求，而DELETE、PUT等method并不支持,可以将这些请求转换为标准的http方法，使得支持GET、POST、PUT与DELETE请求
        enabled: true
  main:
    allow-bean-definition-overriding: true # 当遇到同样名字的时候，是否允许覆盖注册不配置会报错
  redis:
    host: 127.0.0.1
    port: 6379
    password:
    # 连接超时时间（毫秒）
    timeout: 1000
    # Redis默认情况下有16个分片，这里配置具体使用的分片，默认是0
    database: 0
    lettuce:
      pool:
        # 连接池最大连接数(使用负值表示没有限制) 默认为8
        max-active: 8
        # 连接池最大阻塞等待时间(使用负值表示没有限制) 默认为-1
        max-wait: -1ms
        # 连接池中的最大空闲连接 默认为8
        max-idle: 8
        # 连接池中的最小空闲连接 默认为 0
        min-idle: 0

#  mvc:
#    static-path-pattern:
# mybatis配置
debug: false
mybatis:
  type-aliases-package: com.hly.march2.entity
  mapper-locations: classpath:mybatis/mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.log4j2.Log4j2Impl

shiro:
  enabled: true
  web:
    enabled: true
#  loginUrl: /login

file:
  upload:
    path: /home/uploads

logging:
  config: classpath:log4j2.xml
  pattern:
    file: mylo bgs/

pagehelper:
  helper-dialect: mysql
  reasonable: true
  support-methods-arguments: true
  params: count=coutSql
---
server:
  port: 8082
spring:
  profiles: dev
---
server:
  port: 8083
spring:
  profiles: test
